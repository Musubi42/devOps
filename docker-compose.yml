version: "3"

services:
  # nginx:
  #   container_name: infisical-nginx
  #   image: nginx
  #   restart: always
  #   # ports:
  #   #   - 80:80
  #   #   - 443:443
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - infisical
  #     - traefik
  #   labels:
  #     - ${traefik_enable}
  #     - ${traefik_http_routers_rule}
  #     - ${traefik_http_router_entrypoints}
  #     - ${traefik_http_routers_tls}
  #     - ${traefik_http_routers_tls_certresolver}
  #     - ${traefik_http_services}
  #     # TODO: Check for non interrupting update
  #     - ${watchtower_auto_update}


    #   - traefik
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.infisical-api-router.entrypoints=websecure"
    #   - "traefik.http.routers.infisical-api-router.tls=true"
    #   - "traefik.http.routers.infisical-api-router.tls.certresolver=letsencryptresolver"
    #   - "traefik.http.routers.infisical-api-router.rule=Host(`infisical.musubi.dev`)"  # Replace with your API domain
    #   - "traefik.http.services.infisical-api-service.loadbalancer.server.port=4000"

  backend:
    container_name: infisical-backend
    restart: unless-stopped
    depends_on:
      - mongo
    image: infisical/backend
    env_file: .env
    environment:
      - NODE_ENV=production
    networks:
      - infisical
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.infisical_backend_routers.entrypoints=websecure"
      - "traefik.http.routers.infisical_backend_routers.tls=true"
      - "traefik.http.routers.infisical_backend_routers.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.infisical_backend_routers.rule=Host(`infisical.musubi.dev`) && PathPrefix(`/api`)"  # Route requests with path prefix "/api"
      - "traefik.http.services.infisical_backend_services.loadbalancer.server.port=4000"  # Replace with your backend container's port

  frontend:
    container_name: infisical-frontend
    restart: unless-stopped
    depends_on:
      - backend
    image: infisical/frontend
    env_file: .env
    environment:
      # - NEXT_PUBLIC_POSTHOG_API_KEY=${POSTHOG_PROJECT_API_KEY}
      - INFISICAL_TELEMETRY_ENABLED=${TELEMETRY_ENABLED}
    networks:
      - infisical
      - traefik
    labels:
      - ${traefik_enable}
      - ${traefik_http_routers_rule}
      - ${traefik_http_routers_entrypoints}
      - ${traefik_http_routers_tls}
      - ${traefik_http_routers_tls_certresolver}
      - ${traefik_http_services}
      # TODO: Check for non interrupting update
      - ${watchtower_auto_update}

  redis:
    image: redis
    container_name: infisical-dev-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    networks:
      - infisical
    volumes:
      - redis_data:/data

  mongo:
    container_name: infisical-mongo
    image: mongo
    restart: always
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - infisical

volumes:
  mongo-data:
    driver: local
  redis_data:
    driver: local

networks:
  infisical:
  traefik:
      name: traefik
      external: true
